[
    {
        "label": "commands",
        "importPath": "discord.ext",
        "description": "discord.ext",
        "isExtraImport": true,
        "detail": "discord.ext",
        "documentation": {}
    },
    {
        "label": "commands",
        "importPath": "discord.ext",
        "description": "discord.ext",
        "isExtraImport": true,
        "detail": "discord.ext",
        "documentation": {}
    },
    {
        "label": "commands",
        "importPath": "discord.ext",
        "description": "discord.ext",
        "isExtraImport": true,
        "detail": "discord.ext",
        "documentation": {}
    },
    {
        "label": "requests",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "requests",
        "description": "requests",
        "detail": "requests",
        "documentation": {}
    },
    {
        "label": "re",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "re",
        "description": "re",
        "detail": "re",
        "documentation": {}
    },
    {
        "label": "io",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "io",
        "description": "io",
        "detail": "io",
        "documentation": {}
    },
    {
        "label": "discord",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "discord",
        "description": "discord",
        "detail": "discord",
        "documentation": {}
    },
    {
        "label": "dapi",
        "importPath": "environment",
        "description": "environment",
        "isExtraImport": true,
        "detail": "environment",
        "documentation": {}
    },
    {
        "label": "tg_token",
        "importPath": "environment",
        "description": "environment",
        "isExtraImport": true,
        "detail": "environment",
        "documentation": {}
    },
    {
        "label": "bot_token",
        "importPath": "environment",
        "description": "environment",
        "isExtraImport": true,
        "detail": "environment",
        "documentation": {}
    },
    {
        "label": "Deta",
        "importPath": "deta",
        "description": "deta",
        "isExtraImport": true,
        "detail": "deta",
        "documentation": {}
    },
    {
        "label": "os",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "os",
        "description": "os",
        "detail": "os",
        "documentation": {}
    },
    {
        "label": "json",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "json",
        "description": "json",
        "detail": "json",
        "documentation": {}
    },
    {
        "label": "SimpleNamespace",
        "importPath": "types",
        "description": "types",
        "isExtraImport": true,
        "detail": "types",
        "documentation": {}
    },
    {
        "label": "Flask",
        "importPath": "flask",
        "description": "flask",
        "isExtraImport": true,
        "detail": "flask",
        "documentation": {}
    },
    {
        "label": "Basic",
        "kind": 6,
        "importPath": "commands.basic",
        "description": "commands.basic",
        "peekOfCode": "class Basic(commands.Cog):\n    def __init__(self, bot):\n        self.bot = bot\n    @commands.slash_command()\n    async def content(self, ctx):\n        await ctx.respond(\"Đây là Content Download phiên bản Discord\")\n    @commands.slash_command()\n    async def clear(self, ctx, limit: int = None):\n        if limit:\n            await ctx.channel.purge(limit=limit)",
        "detail": "commands.basic",
        "documentation": {}
    },
    {
        "label": "setup",
        "kind": 2,
        "importPath": "commands.basic",
        "description": "commands.basic",
        "peekOfCode": "def setup(bot):\n    bot.add_cog(Basic(bot))",
        "detail": "commands.basic",
        "documentation": {}
    },
    {
        "label": "TTDy",
        "kind": 6,
        "importPath": "commands.ttdy",
        "description": "commands.ttdy",
        "peekOfCode": "class TTDy(commands.Cog):\n    def __init__(self, bot):\n        self.bot = bot\n    @commands.Cog.listener()\n    async def on_message(self, message):\n        if any(match in message.content for match in [\"tiktok\", \"douyin\"]):\n            await message.channel.trigger_typing()\n            url = re.search(r\"(?P<url>https?://[^\\s]+)\", message.content).group(\"url\")\n            r = requests.get(dapi + \"/tikdou\", params={\"url\": url}, timeout=99).json()\n            dl_link = r.get(\"url\")",
        "detail": "commands.ttdy",
        "documentation": {}
    },
    {
        "label": "setup",
        "kind": 2,
        "importPath": "commands.ttdy",
        "description": "commands.ttdy",
        "peekOfCode": "def setup(bot):\n    bot.add_cog(TTDy(bot))",
        "detail": "commands.ttdy",
        "documentation": {}
    },
    {
        "label": "deta",
        "kind": 5,
        "importPath": "init.db",
        "description": "init.db",
        "peekOfCode": "deta = Deta(os.getenv(\"DETA_KEY\"))\nbase = deta.Base(\"tokens\")\nbot_token = base.get(\"discord\")[\"token\"]\ntg_token = base.get(\"bot\")[\"td\"]",
        "detail": "init.db",
        "documentation": {}
    },
    {
        "label": "base",
        "kind": 5,
        "importPath": "init.db",
        "description": "init.db",
        "peekOfCode": "base = deta.Base(\"tokens\")\nbot_token = base.get(\"discord\")[\"token\"]\ntg_token = base.get(\"bot\")[\"td\"]",
        "detail": "init.db",
        "documentation": {}
    },
    {
        "label": "bot_token",
        "kind": 5,
        "importPath": "init.db",
        "description": "init.db",
        "peekOfCode": "bot_token = base.get(\"discord\")[\"token\"]\ntg_token = base.get(\"bot\")[\"td\"]",
        "detail": "init.db",
        "documentation": {}
    },
    {
        "label": "tg_token",
        "kind": 5,
        "importPath": "init.db",
        "description": "init.db",
        "peekOfCode": "tg_token = base.get(\"bot\")[\"td\"]",
        "detail": "init.db",
        "documentation": {}
    },
    {
        "label": "secret",
        "kind": 5,
        "importPath": "environment",
        "description": "environment",
        "peekOfCode": "secret = requests.get(os.getenv(\"SECRET\"), timeout=99).text\nres = json.loads(secret, object_hook=lambda _: SimpleNamespace(**_))\ndapi = res.api.dapi\nbot_token = res.bot.discord\ntg_token = res.bot.tiktokdouyin",
        "detail": "environment",
        "documentation": {}
    },
    {
        "label": "res",
        "kind": 5,
        "importPath": "environment",
        "description": "environment",
        "peekOfCode": "res = json.loads(secret, object_hook=lambda _: SimpleNamespace(**_))\ndapi = res.api.dapi\nbot_token = res.bot.discord\ntg_token = res.bot.tiktokdouyin",
        "detail": "environment",
        "documentation": {}
    },
    {
        "label": "dapi",
        "kind": 5,
        "importPath": "environment",
        "description": "environment",
        "peekOfCode": "dapi = res.api.dapi\nbot_token = res.bot.discord\ntg_token = res.bot.tiktokdouyin",
        "detail": "environment",
        "documentation": {}
    },
    {
        "label": "bot_token",
        "kind": 5,
        "importPath": "environment",
        "description": "environment",
        "peekOfCode": "bot_token = res.bot.discord\ntg_token = res.bot.tiktokdouyin",
        "detail": "environment",
        "documentation": {}
    },
    {
        "label": "tg_token",
        "kind": 5,
        "importPath": "environment",
        "description": "environment",
        "peekOfCode": "tg_token = res.bot.tiktokdouyin",
        "detail": "environment",
        "documentation": {}
    },
    {
        "label": "intents",
        "kind": 5,
        "importPath": "main",
        "description": "main",
        "peekOfCode": "intents = discord.Intents.default()\nintents.message_content = True\nbot = commands.Bot(intents=intents)\n@bot.event\nasync def on_ready():\n    print(\"OK\")\nbot.load_extensions(\"commands\")\nbot.run(bot_token)",
        "detail": "main",
        "documentation": {}
    },
    {
        "label": "intents.message_content",
        "kind": 5,
        "importPath": "main",
        "description": "main",
        "peekOfCode": "intents.message_content = True\nbot = commands.Bot(intents=intents)\n@bot.event\nasync def on_ready():\n    print(\"OK\")\nbot.load_extensions(\"commands\")\nbot.run(bot_token)",
        "detail": "main",
        "documentation": {}
    },
    {
        "label": "bot",
        "kind": 5,
        "importPath": "main",
        "description": "main",
        "peekOfCode": "bot = commands.Bot(intents=intents)\n@bot.event\nasync def on_ready():\n    print(\"OK\")\nbot.load_extensions(\"commands\")\nbot.run(bot_token)",
        "detail": "main",
        "documentation": {}
    },
    {
        "label": "home",
        "kind": 2,
        "importPath": "web",
        "description": "web",
        "peekOfCode": "def home():\n    return \"Running\"",
        "detail": "web",
        "documentation": {}
    },
    {
        "label": "app",
        "kind": 5,
        "importPath": "web",
        "description": "web",
        "peekOfCode": "app = Flask(__name__)\n@app.route(\"/\")\ndef home():\n    return \"Running\"",
        "detail": "web",
        "documentation": {}
    }
]